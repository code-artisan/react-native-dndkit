{"version":3,"file":"assert.js","sourceRoot":"","sources":["../../src/utils/assert.ts"],"names":[],"mappings":"AAAA,MAAM,cAAe,SAAQ,KAAK;IAKvB;IACA;IACA;IANT,IAAI,GAAG,gBAAgB,CAAC;IACxB,IAAI,GAAG,eAAe,CAAC;IACvB,YACE,OAAO,GAAG,EAAE,EACL,MAAe,EACf,WAAoB,MAAM,EAC1B,WAAW,IAAI;QAEtB,KAAK,CAAC,OAAO,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,QAAQ,EAAE,CAAC,CAAC;QAJ/C,WAAM,GAAN,MAAM,CAAS;QACf,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAO;QAGtB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;CACF;AAED,MAAM,CAAC,MAAM,MAAM,GAAwD,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE;IAC5F,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;QAC1C,MAAM,IAAI,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;AACH,CAAC,CAAC","sourcesContent":["class AssertionError extends Error {\n  name = \"AssertionError\";\n  code = \"ERR_ASSERTION\";\n  constructor(\n    message = \"\",\n    public actual: unknown,\n    public expected: unknown = \"true\",\n    public operator = \"==\",\n  ) {\n    super(message || `${actual} ${operator} ${expected}`);\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport const assert: (value: unknown, message?: string) => asserts value = (value, message) => {\n  if (value === undefined || value === null) {\n    throw new AssertionError(message, value);\n  }\n};\n"]}