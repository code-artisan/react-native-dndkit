{"version":3,"file":"useLatestSharedValue.js","sourceRoot":"","sources":["../../src/hooks/useLatestSharedValue.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAG9E,MAAM,UAAU,oBAAoB,CAAI,KAAQ,EAAE,eAA+B,CAAC,KAAK,CAAC;IACtF,MAAM,WAAW,GAAG,cAAc,CAAI,KAAK,CAAC,CAAC;IAE7C,mBAAmB,CACjB,GAAG,EAAE,CAAC,KAAK,EACX,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;QACb,0BAA0B;QAC1B,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;YAClB,OAAO;QACT,CAAC;QACD,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC;IAC3B,CAAC,EACD,YAAY,CACb,CAAC;IAEF,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["import { useAnimatedReaction, useSharedValue } from \"react-native-reanimated\";\nimport type { DependencyList } from \"../types\";\n\nexport function useLatestSharedValue<T>(value: T, dependencies: DependencyList = [value]) {\n  const sharedValue = useSharedValue<T>(value);\n\n  useAnimatedReaction(\n    () => value,\n    (next, prev) => {\n      // Ignore initial reaction\n      if (prev === null) {\n        return;\n      }\n      sharedValue.value = next;\n    },\n    dependencies,\n  );\n\n  return sharedValue;\n}\n"]}