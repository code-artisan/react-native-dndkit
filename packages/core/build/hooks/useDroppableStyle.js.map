{"version":3,"file":"useDroppableStyle.js","sourceRoot":"","sources":["../../src/hooks/useDroppableStyle.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,IAAI,CAAC;AAQnC,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,EAAoB,EACpB,QAA2C,EACnC,EAAE;IACV,MAAM,EAAE,iBAAiB,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,aAAa,EAAE,CAAC;IACnF,OAAO,gBAAgB,CAAS,GAAG,EAAE;QACnC,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,KAAK,EAAE,CAAC;QACvC,MAAM,UAAU,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;QAChD,OAAO,QAAQ,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5C,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["import { useAnimatedStyle } from \"react-native-reanimated\";\nimport { useDndContext } from \"..\";\nimport type { AnimatedStyle, UniqueIdentifier } from \"../types\";\n\nexport type UseDroppableStyleCallback<StyleT extends AnimatedStyle> = (_: {\n  isActive: boolean;\n  isDisabled: boolean;\n}) => StyleT;\n\nexport const useDroppableStyle = <StyleT extends AnimatedStyle>(\n  id: UniqueIdentifier,\n  callback: UseDroppableStyleCallback<StyleT>,\n): StyleT => {\n  const { droppableActiveId: activeId, droppableOptions: options } = useDndContext();\n  return useAnimatedStyle<StyleT>(() => {\n    const isActive = activeId.value === id;\n    const isDisabled = !options.value[id]?.disabled;\n    return callback({ isActive, isDisabled });\n  }, [activeId, options]);\n};\n"]}