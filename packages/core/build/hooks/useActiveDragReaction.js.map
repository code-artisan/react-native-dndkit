{"version":3,"file":"useActiveDragReaction.js","sourceRoot":"","sources":["../../src/hooks/useActiveDragReaction.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,8BAA8B,CAAC;AACrD,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAG9C,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,EAAoB,EAAE,QAAqC,EAAE,EAAE;IACnG,MAAM,EAAE,iBAAiB,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,aAAa,EAAE,CAAC;IACzE,mBAAmB,CACjB,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE,IAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAa,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,EACvG,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;QACb,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;YAClB,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACH,CAAC,EACD,CAAC,QAAQ,EAAE,eAAe,CAAC,CAC5B,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { State } from \"react-native-gesture-handler\";\nimport { useAnimatedReaction } from \"react-native-reanimated\";\nimport { useDndContext } from \"../DndContext\";\nimport type { UniqueIdentifier } from \"../types\";\n\nexport const useActiveDragReaction = (id: UniqueIdentifier, callback: (isActive: boolean) => void) => {\n  const { draggableActiveId: activeId, panGestureState } = useDndContext();\n  useAnimatedReaction(\n    () => activeId.value === id && ([State.BEGAN, State.ACTIVE] as State[]).includes(panGestureState.value),\n    (next, prev) => {\n      if (next !== prev) {\n        callback(next);\n      }\n    },\n    [activeId, panGestureState],\n  );\n};\n"]}