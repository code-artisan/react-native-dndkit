{"version":3,"file":"reanimated.js","sourceRoot":"","sources":["../../src/utils/reanimated.ts"],"names":[],"mappings":"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","sourcesContent":["import { LayoutRectangle } from \"react-native\";\nimport {\n  SharedValue,\n  withSpring,\n  type AnimatableValue,\n  type AnimationCallback,\n  type WithSpringConfig,\n} from \"react-native-reanimated\";\n\nimport type { SharedPoint } from \"../hooks\";\nimport type { AnyData } from \"../types\";\n\nexport const DEFAULT_SPRING_CONFIG: WithSpringConfig = {\n  damping: 10, // Defines how the spring’s motion should be damped due to the forces of friction. Default 10.\n  mass: 1, // The mass of the object attached to the end of the spring. Default 1.\n  stiffness: 100, // The spring stiffness coefficient. Default 100.\n  overshootClamping: false, // Indicates whether the spring should be clamped and not bounce. Default false.\n  restSpeedThreshold: 0.001, // The speed at which the spring should be considered at rest in pixels per second. Default 0.001.\n  restDisplacementThreshold: 0.2, // The threshold of displacement from rest below which the spring should be considered at rest. Default 0.001.\n};\nexport const FAST_SPRING_CONFIG: WithSpringConfig = {\n  damping: 20, // Defines how the spring’s motion should be damped due to the forces of friction. Default 10.\n  mass: 0.5, // The mass of the object attached to the end of the spring. Default 1.\n  stiffness: 100, // The spring stiffness coefficient. Default 100.\n  overshootClamping: false, // Indicates whether the spring should be clamped and not bounce. Default false.\n  restSpeedThreshold: 0.2, // The speed at which the spring should be considered at rest in pixels per second. Default 0.001.\n  restDisplacementThreshold: 0.2, // The threshold of displacement from rest below which the spring should be considered at rest. Default 0.001.\n};\nexport const DEFAULT_SPRING_CONFIG_3: WithSpringConfig = {\n  damping: 20, // Defines how the spring’s motion should be damped due to the forces of friction. Default 10.\n  mass: 0.5, // The mass of the object attached to the end of the spring. Default 1.\n  stiffness: 100, // The spring stiffness coefficient. Default 100.\n  overshootClamping: false, // Indicates whether the spring should be clamped and not bounce. Default false.\n  restSpeedThreshold: 0.01, // The speed at which the spring should be considered at rest in pixels per second. Default 0.001.\n  restDisplacementThreshold: 0.2, // The threshold of displacement from rest below which the spring should be considered at rest. Default 0.001.\n};\nexport const SLOW_SPRING_CONFIG: WithSpringConfig = {\n  damping: 20, // Defines how the spring’s motion should be damped due to the forces of friction. Default 10.\n  mass: 1, // The mass of the object attached to the end of the spring. Default 1.\n  stiffness: 10, // The spring stiffness coefficient. Default 100.\n  overshootClamping: false, // Indicates whether the spring should be clamped and not bounce. Default false.\n  restSpeedThreshold: 0.01, // The speed at which the spring should be considered at rest in pixels per second. Default 0.001.\n  restDisplacementThreshold: 0.2, // The threshold of displacement from rest below which the spring should be considered at rest. Default 0.001.\n};\n\n/**\n * @summary Waits for n-callbacks\n * @worklet\n */\nexport const waitForAll = <T extends unknown[]>(\n  callback: (...args: T) => void,\n  count = 2,\n) => {\n  \"worklet\";\n  const status = new Array(count).fill(false);\n  const result = new Array(count).fill(undefined);\n  return status.map((_v, index) => {\n    return (...args: unknown[]) => {\n      status[index] = true;\n      result[index] = args;\n      if (status.every(Boolean)) {\n        callback(...(result as T));\n      }\n    };\n  });\n};\n\ntype AnimationCallbackParams = Parameters<AnimationCallback>;\n\nexport type AnimationPointCallback = (\n  finished: [boolean | undefined, boolean | undefined],\n  current: [AnimatableValue | undefined, AnimatableValue | undefined],\n) => void;\n\nexport const withDefaultSpring: typeof withSpring = (\n  toValue,\n  userConfig: WithSpringConfig = {},\n  callback,\n) => {\n  \"worklet\";\n  const config: WithSpringConfig = Object.assign(\n    {},\n    SLOW_SPRING_CONFIG,\n    userConfig,\n  );\n  return withSpring(toValue, config, callback);\n};\n\n/**\n * @summary Easily animate a `SharePoint`\n * @worklet\n */\nexport const animatePointWithSpring = (\n  point: SharedPoint,\n  [toValueX, toValueY]: [number, number],\n  [configX, configY]: [\n    WithSpringConfig | undefined,\n    WithSpringConfig | undefined,\n  ] = [undefined, undefined],\n  callback?: AnimationPointCallback,\n) => {\n  \"worklet\";\n  const [waitForX, waitForY] = waitForAll<\n    [AnimationCallbackParams, AnimationCallbackParams]\n  >(([finishedX, currentX], [finishedY, currentY]) => {\n    if (!callback) {\n      return;\n    }\n    callback([finishedX, finishedY], [currentX, currentY]);\n  });\n  point.x.value = withSpring(toValueX, configX, waitForX);\n  point.y.value = withSpring(toValueY, configY, waitForY);\n};\n\nexport const moveArrayIndex = <T>(input: T[], from: number, to: number) => {\n  \"worklet\";\n  const output = input.slice();\n  output.splice(to, 0, output.splice(from, 1)[0]);\n  return output;\n};\n\n/*\ndamping: 10\nmass: 1\nstiffness: 100\novershootClamping: false\nrestDisplacementThreshold: 0.01\nrestSpeedThreshold: 2\n*/\n\nexport const stringifySharedPoint = ({ x, y }: SharedPoint) => {\n  \"worklet\";\n  return `{\"x\": ${Math.floor(x.value)}, \"y\": ${Math.floor(y.value)}}`;\n};\n\nexport const stringifyLayout = ({ x, y, width, height }: LayoutRectangle) => {\n  \"worklet\";\n  return `{\"x\": ${Math.floor(x)}, \"y\": ${Math.floor(y)}, \"width\": ${Math.floor(width)}, \"height\": ${Math.floor(\n    height,\n  )}}`;\n};\n\nexport const floorLayout = ({ x, y, width, height }: LayoutRectangle) => {\n  \"worklet\";\n  return {\n    x: Math.floor(x),\n    y: Math.floor(y),\n    width: Math.floor(width),\n    height: Math.floor(height),\n  };\n};\n\n/**\n * @summary Checks if a value is a `Reanimated` shared value\n * @param {object} value - The value to check\n * @returns {boolean} Whether the value is a `Reanimated` shared value\n */\nexport const isReanimatedSharedValue = (\n  value: unknown,\n): value is SharedValue<AnyData> =>\n  typeof value === \"object\" &&\n  (value as { _isReanimatedSharedValue: boolean })?._isReanimatedSharedValue;\n"]}