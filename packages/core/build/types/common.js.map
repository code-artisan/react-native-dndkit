{"version":3,"file":"common.js","sourceRoot":"","sources":["../../src/types/common.ts"],"names":[],"mappings":"","sourcesContent":["import type { HostComponent, ViewProps, ViewStyle } from \"react-native\";\nimport type { SharedValue, useAnimatedStyle } from \"react-native-reanimated\";\n\nexport type UniqueIdentifier = string | number;\nexport type ObjectWithId = { id: UniqueIdentifier; [s: string]: unknown };\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type AnyData = Record<string, any>;\nexport type Data<T = AnyData> = T | SharedValue<T>;\nexport type SharedData<T = AnyData> = SharedValue<T>;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type NativeElement = InstanceType<HostComponent<ViewProps>>;\n\nexport type AnimatedStyle = ReturnType<typeof useAnimatedStyle>;\nexport type AnimatedViewStyle = ReturnType<typeof useAnimatedStyle<ViewStyle>>;\nexport type AnimatedStyleWorklet<T extends AnimatedStyle = AnimatedViewStyle> =\n  (\n    style: Readonly<T>,\n    options: { isActive: boolean; isDisabled: boolean; isActing?: boolean },\n  ) => T;\n"]}